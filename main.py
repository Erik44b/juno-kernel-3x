def Setting__Command_List():
    print("Files")
    pause(10)
    print("Directory")
    pause(10)
    print("Version")
    pause(10)
    print("VersionLog")
    pause(10)
    print("Bootloader")
    pause(10)
    print("Registry")
    pause(10)
    print(" ")
    print("Juno > ____")

def on_a_pressed():
    global Command_List, Temporary_File_Name, Temporary_File_Data
    spriteutils.set_console_overlay(False)
    blockSettings.write_string("DirectorySearch", game.ask_for_string("Insert Command"))
    if blockSettings.exists(blockSettings.read_string("DirectorySearch")):
        spriteutils.set_console_overlay(True)
        print("Juno Kernel Version " + str(blockSettings.read_number("Version")))
        print(" ")
        print("\"" + blockSettings.read_string("DirectorySearch") + "\"")
        if blockSettings.read_string("DirectorySearch") == "Directory":
            print(" ")
            Command_List = [blockSettings.read_string("Directory")]
            print(blockSettings.list())
            print(" ")
            print("Juno > ____")
        elif blockSettings.read_string("DirectorySearch") == "Version":
            print(" ")
            print("This version is up ")
            print("to date.")
            print(" ")
            print("Juno > ____")
        elif blockSettings.read_string("DirectorySearch") == "VersionLog":
            print(" ")
            print("Kernel Update")
            print(" ")
            print("- Added Bootloader Setting")
            print("- Added Files")
            print(" ")
            print("Juno > ____")
        elif blockSettings.read_string("DirectorySearch") == "Files":
            print(" ")
            print("Files:")
            pause(100)
            Setting__Command_List()
            print(" ")
            print("Juno > ____")
        elif blockSettings.read_string("DirectorySearch") == "Registry":
            print(" ")
            print("Files:")
            Setting__Command_List()
            print("Add File (?)")
            print(" ")
            print("Juno > Registry > ____")
            pause(5000)
            spriteutils.set_console_overlay(False)
            blockSettings.write_string("DirectorySearch", game.ask_for_string("Add File (?)"))
            if blockSettings.read_string("DirectorySearch") == "Yes":
                Temporary_File_Name = game.ask_for_string("Insert File Name")
                Temporary_File_Data = game.ask_for_string("Insert File Data")
                blockSettings.write_string(Temporary_File_Name, Temporary_File_Data)
                spriteutils.set_console_overlay(True)
                print("Juno Kernel Version " + str(blockSettings.read_number("Version")))
                print(" ")
                print("\"" + str(blockSettings.read_number(Temporary_File_Name)) + "\"" + "" + "has Been Created.")
            elif blockSettings.read_string("DirectorySearch") == "No":
                game.reset()
            elif blockSettings.read_string("DirectorySearch") == "View":
                spriteutils.set_console_overlay(True)
                print("Juno Kernel Version " + str(blockSettings.read_number("Version")))
                print(" ")
                Setting__Command_List()
                print(" ")
                print("Commands")
            elif blockSettings.read_string("DirectorySearch") == "Delete":
                Temporary_File_Name = game.ask_for_string("Insert File Name")
                blockSettings.remove(Temporary_File_Name)
                spriteutils.set_console_overlay(True)
                print("Juno Kernel Version " + str(blockSettings.read_number("Version")))
                print(" ")
                print("Note: Settings that are bundled with Juno Kernel are unable to be deleted.")
                print(" ")
                print("You Can Delete:")
                print("Bootloader [NOT RECOMMENDED]")
                print("Custom Settings")
                print(" ")
                pause(500)
                if Temporary_File_Name == "Bootloader":
                    spriteutils.set_console_overlay(False)
                    pause(500)
                    scene.set_background_color(2)
                    pause(100)
                    spriteutils.set_console_overlay(True)
                    print("Juno Kernel")
                    print(" ")
                    print("FATAL ERROR")
                    print("002 - Key File Deleted")
                    print(" ")
                    print("What can I do to fix this?")
                    print("- Restart the Simulator. ")
                    print("- Juno will need to reinstall the Bootloader.")
                    print("- All Settings will be removed.")
                    while True:
                        pause(100)
                else:
                    print("Juno > ____")
            else:
                Registry001()
    else:
        spriteutils.set_console_overlay(True)
        print(" ")
        print("Error 001 - No Settings")
        print("found with name \"" + blockSettings.read_string("DirectorySearch") + "\"")
        pause(100)
        print(" ")
        print("Available Commands:")
        print(Command_List)
        print(" ")
        print("Juno > ____")
controller.A.on_event(ControllerButtonEvent.PRESSED, on_a_pressed)

def Juno():
    global SystemReinstallVerificationBoolean, Command_List
    blockSettings.write_number("Version", 21)
    blockSettings.write_string("VersionLog", "Version 0021 - GUI Update")
    SystemReinstallVerificationBoolean = False
    blockSettings.write_string("Directory", "Directory")
    blockSettings.write_string("Directory.Search", "DirectorySearch")
    blockSettings.write_string("Files", "Settings + Commands")
    blockSettings.write_string("Registry", "ver0.21.1")
    Command_List = ["Directory", "Version", "VersionLog", "Files", "Registry"]
    GUI()
def GUI():
    spriteutils.set_console_overlay(True)
    pause(100)
    print("Juno Kernel Version " + str(blockSettings.read_number("Version")))
    pause(100)
    print(" ")
    pause(500)
    print("Data Used: " + str(len(blockSettings.list())) + " Settings")
    print("" + str(len(Command_List)) + " Command(s)")
    pause(500)
    if len(Command_List) > 0:
        pause(500)
        print(" ")
        print(Command_List)
    else:
        print(" ")
        print("Error 000 - No Commands")
        print("Listed in Directory.")
        pause(500)
        print(" ")
        print("Please Reinstall the Juno")
        print("Kernel or Upgrade to a ")
        print("newer version.")
        pause(500)
        print(" ")
        print("Current Version:")
        print("Juno Kernel Version " + str(blockSettings.read_number("Version")))
        pause(500)
        if blockSettings.read_number("Version") <= 0:
            print(" ")
            print("Looking for new Versions")
            for index in range(randint(4, 10)):
                print(".")
                pause(500)
            print("No Newer Versions Found.")
            print("Reinstalling the Juno ")
            print("Kernel...")
            pause(1000)
            blockSettings.clear()
            game.reset()
    print(" ")
    print("Juno > ____")
def Registry001():
    spriteutils.set_console_overlay(True)
    print("Juno Kernel Version " + str(blockSettings.read_number("Version")))
    print(" ")
    print(" ")
    print("Files:")
    Setting__Command_List()
    print(" ")
    print("File Not Found.")
    print(" ")
    print("Juno > Registry > ____")
SystemReinstallVerificationBoolean = False
Temporary_File_Data = ""
Temporary_File_Name = ""
Command_List: List[str] = []
if blockSettings.exists("Bootloader"):
    Juno()
else:
    spriteutils.set_console_overlay(True)
    print("Juno Kernel Installation")
    pause(100)
    print("Installing Necessary Settings...")
    print(" ")
    print("NOTE: Some Settings Might be installed that aren't listed below. Once setup finishes please use the  'Files' Command to view  all settings.")
    pause(500)
    print(" ")
    blockSettings.write_string("Registry", "ver0.21.1")
    print("Registry {Installed}")
    pause(500)
    blockSettings.write_string("Files", "Settings + Commands")
    print("Files {Installed}")
    pause(500)
    blockSettings.write_string("Directory", "Directory")
    print("Directory {Installed}")
    pause(500)
    blockSettings.write_number("Version", 21)
    print("Version {Installed}")
    pause(500)
    print(" ")
    print("Installing Bootloader...")
    blockSettings.write_number("Bootloader", 21)
    print("Bootloader has installed!")
    print("The Kernel will now")
    print("restart...")
    pause(500)
    game.reset()